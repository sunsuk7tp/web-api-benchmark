package benchmark.generator;

public abstract class IntegerGenerator extends Generator {
	int lastint;

	/**
	 * Set the last value generated. IntegerGenerator subclasses must use this call
	 * to properly set the last string value, or the lastString() and lastInt() calls won't work.
	 */
	public void setLastInt(int last) {
		lastint=last;
	}

	/**
	 * Return the next value as an int. When overriding this method, be sure to call setLastString() properly, or the lastString() call won't work.
	 */
	public abstract int nextInt();

	/**
	 * Generate the next string in the distribution.
	 */
	@Override
	public String nextString() {
		return ""+nextInt();
	}

	/**
	 * Return the previous string generated by the distribution; e.g., returned from the last nextString() call.
	 * Calling lastString() should not advance the distribution or have any side effects. If nextString() has not yet
	 * been called, lastString() should return something reasonable.
	 */
	@Override
	public String lastString() {
		return ""+lastint;
	}

	/**
	 * Return the previous int generated by the distribution. This call is unique to IntegerGenerator subclasses, and assumes
	 * IntegerGenerator subclasses always return ints for nextInt() (e.g. not arbitrary strings).
	 */
	public int lastInt() {
		return lastint;
	}
}
